name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v2
      - name: Build R language
        uses: r-lib/actions/setup-r@v2
      - name: Setup R_HOME environment variable
        run: echo "LD_LIBRARY_PATH=$(R RHOME)/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      - name: Install curl package
        run: |
          sudo apt-get install -y curl python3-pycurl libcurl4-openssl-dev
      - name: Install Github CLI environment variable for Julia
        run: |
          export JULIA_PKG_USE_CLI_GIT=true
          export LD_LIBRARY_PATH=/opt/R/4.2.3/lib/R/lib:$LD_LIBRARY_PATH
      - name: Add Github to known_hosts file
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          curl -L https://api.github.com/meta | jq -r '.ssh_keys | .[]' | sed -e 's/^/github.com /' >> ~/.ssh/known_hosts
      - uses: webfactory/ssh-agent@v0.8.0
        with:
            ssh-private-key: |
                  ${{ secrets.SSH_PK_JGUT_OPTIMIZE }}
                  ${{ secrets.SSH_PK_JGU_OPTIMIZE }}
      - name: Download and install R packages - readr
        run: | 
          R -e 'install.packages("readr")'
      - name: Download and install R packages - forecast
        run: | 
          R -e 'install.packages("forecast")'
      - name: Download and install R packages - data.table
        run: | 
          R -e 'install.packages("data.table")'
      - uses: julia-actions/setup-julia@v1
        env:
          LD_LIBRARY_PATH: '/opt/R/4.2.3/lib/R/lib'
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: Install JuliaGendUniv_Types private repo
        run: julia --project -e 'using Pkg; Pkg.develop(url="git@github.com:university-gender-evolution/JuliaGendUniv_Types.jl.git")'
        env:
          JULIA_PKG_USE_CLI_GIT: 'true'
      - name: Install JuliaGendUniv private repo
        run: julia --project -e 'using Pkg; Pkg.develop(url="git@github.com:university-gender-evolution/JuliaGendUniv.jl.git")'
        env:
          JULIA_PKG_USE_CLI_GIT: 'true'
      - uses: julia-actions/julia-buildpkg@v1
        env:
          LD_LIBRARY_PATH: '/opt/R/4.2.3/lib/R/lib'
      - name: Download UM datafile for testing
        uses: dsaltares/fetch-gh-release-asset@master
        env:
          JULIA_PKG_USE_CLI_GIT: 'true'
        with:
          repo: 'university-gender-evolution/JuliaGendUniv_Optimize.jl'
          version: 'tags/v0.1.0'
          file: 'michigan1979to2009_wGender.dta'
          target: 'test/michigan1979to2009_wGender.dta'
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     statuses: write
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     - uses: julia-actions/julia-buildpkg@v1
  #     - uses: julia-actions/julia-docdeploy@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - run: |
  #         julia --project=docs -e '
  #           using Documenter: DocMeta, doctest
  #           using testpack
  #           DocMeta.setdocmeta!(testpack, :DocTestSetup, :(using testpack); recursive=true)
  #           doctest(testpack)'